fof(reflexive, axiom, ((
	![X:$i]:(
	equals(X,X))))).

fof(symmetric, axiom, ((
	![X:$i,Y:$i]:(
	equals(X,Y)
	=> equals(Y,X))))).

fof(transitive, axiom, ((
	![A:$i,B:$i,C:$i]:(
	(equals(A,B)
	& equals(B,C))
	=> equals(A,C))))).


%fof(antiTransitivity, axiom, ((
%	![A:$i,B:$i,C:$i]:(
%	equals(A,B)
%	& ~equals(B,C)
%	=> ~equals(A,C))))).

fof(substitution_multi, axiom, ((	
	![A:$i,B:$i,C:$i]:(
	equals(A,B)
	=> equals(product(A,C),product(B,C)))))).

fof(substitution_add, axiom, ((
	! [A:$i,B:$i,C:$i]:
	(equals(A,B)
	=> equals(sum(A,C),sum(B,C)))))).

fof(multIdentity, axiom, ((
	?[_1:$i]:(
	![X:$i]:(
	equals(X,product(_1,X))))))).	

fof(addIdentity, axiom, ((
	?[_0:$i]:(
	![X:$i]:(
	equals(X,sum(_0,X))))))).	

fof(addSymm, axiom, ((
	![X:$i,Y:$i]:(
	equals(sum(X, Y),sum(Y, X)))))).

fof(multSymm, axiom, ((
	![X:$i,Y:$i]:(
	equals(product(X, Y),product(Y, X)))))).

fof(parensMulti, axiom, ((
	![Z:$i,X:$i,Y:$i]:(
	equals(product(product(X,Y),Z),product(X,product(Y,Z))))))).

fof(addMulti, axiom, ((
	![Z:$i,X:$i,Y:$i]:(
	equals(sum(sum(X,Y),Z),sum(X,sum(Y,Z))))))).

%fof(power, axiom, ((
%	![X:$i]:(
%	sqr(X) = product(X,X))))).

%fof(expansion, conjecture, ((
%	! [A:$i, B:$i, C:$i, D:$i, X:$i,Y:$i]:(
%	equals(A,product(X,X))
%	& equals(B,product(Y,Y))
%	& equals(C,sum(X,Y))
%	& equals(D,difference(X,Y))
%	=> equals(difference(A,B),product(C,D)))))).


%fof(evenness, axiom, ((
%	![A:$i,B:$i,C:$i,D:$i,X:$i]:(
%	A = product(A,C)
%	& B = sum(C,C)
%	& D = product(B,X)
%	=> even(D))))).

%additive inverses

fof(addInverse, axiom, ((
	![X:$i, Y:$i]:(
	?[Z:$i]:(
	equals(Y,sum(X,Z))))))).

%Cancellation - AC = BC => A = B as long as C != 0

%If using any sort of quantifier, parens for everything!!
%fof(test, conjecture, ((
%	! [A:$i,B:$i,C:$i,D:$i]:
%	((equals(A,C)
%	& equals(B,D)
%	=> equals(product(A,B),product(C,D))))))).
%fof(test, conjecture, ((
%	![W:$i,X:$i,Y:$i,Z:$i]:(
%	equals(product(product(X,Y),product(W,Z)),product(product(W,product(X,Y)),Z)))))).

fof(cancellation, axiom, ((
	![A:$i,B:$i,C:$i,D:$i,E:$i]:(
	(equals(D,product(A,C))
	& equals(E,product(B,C))
	& equals(D,E)
	& (?[X:$i]:(~equals(X,sum(C,X)))))
	=> (equals(A,B)))))).

fof(noZeroDivisors, conjecture, ((
	![X:$i,Y:$i,_0:$i,W:$i]:((((
	![Z:$i]:(
	equals(Z, sum(Z,_0))))
	& ~equals(X,_0)
	& ~equals(_0,Y)
	& equals(W,product(X,Y)))
	=> ~equals(W,_0)))))).


